#version 460

//size of a workgroup for compute
layout (local_size_x = 16, local_size_y = 16) in;
layout(rgba16f,set = 0, binding = 0) uniform image2D image;

layout( push_constant ) uniform constants
{
	bvec4 row1;
	bvec4 row2;
	bvec4 row3;
	bvec4 row4;
} BooleanMatrix;

void main() 
{
	vec2 size = imageSize(image);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	vec2 uv = vec2(gl_GlobalInvocationID.xy / size);

	ivec2 pushConstantCoord = ivec2(uv * 4);

	// Red to debug
	vec4 outColor = vec4(1.0, 0.0, 0.0, 1.0);
	vec4 black = vec4(0.0,0.0,0.0,1.0);
	vec4 white = vec4(1.0,1.0,1.0,1.0);

	if (pushConstantCoord.x == 0)
	{
		if (BooleanMatrix.row1[pushConstantCoord.y % 4])
		{
			outColor = white;
		}
		else
		{
			outColor = black;
		}
	}
	else if (pushConstantCoord.x == 1)
	{
		if (BooleanMatrix.row2[pushConstantCoord.y % 4])
		{
			outColor = white;
		}
		else
		{
			outColor = black;
		}
	}
	else if (pushConstantCoord.x == 2)
	{
		if (BooleanMatrix.row3[pushConstantCoord.y % 4])
		{
			outColor = white;
		}
		else
		{
			outColor = black;
		}
	}
	else if (pushConstantCoord.x == 3)
	{
		if (BooleanMatrix.row4[pushConstantCoord.y % 4])
		{
			outColor = white;
		}
		else
		{
			outColor = black;
		}
	}

	if (texelCoord.x < size.x && texelCoord.y < size.y)
	{
		imageStore(image, texelCoord, outColor * vec4(uv, 0.0, 1.0));
	}
}