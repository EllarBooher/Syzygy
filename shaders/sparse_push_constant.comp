#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout(rgba16f,set = 0, binding = 0) uniform image2D image;

// This push constant uses layouts to spread out the data instead of padding like must be done on the host side.
layout( push_constant ) uniform PushConstants
{
	vec2 topRG;
	// 8 bytes of padding
	layout(offset = 16) vec2 topBA;
	// 8 bytes of padding
	layout(offset = 32) vec2 bottomRG;
	// 8 bytes of padding
	layout(offset = 48) vec2 bottomBA;
	// 8 bytes of padding
} pushConstants;

void main()
{
	ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

	ivec2 size = imageSize(image);

	vec4 topColor = vec4(pushConstants.topRG, pushConstants.topBA);
	vec4 bottomColor = vec4(pushConstants.bottomRG, pushConstants.bottomBA);

	if(texelCoord.x < size.x && texelCoord.y < size.y)
	{
		float blend = float(texelCoord.y) / (size.y);

		imageStore(image, texelCoord, mix(topColor, bottomColor, blend));
	}
}