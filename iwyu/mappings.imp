[
  { "include": [ "<glm/ext/vector_bool1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_double1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_float1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },

  { "include": [ "<glm/ext/vector_int1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_int1_sized.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint1_sized.hpp>", "private", "<glm/vec1.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_vec1.hpp>", "private", "<glm/vec1.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_vec1.inl>", "private", "<glm/vec1.hpp>", "public" ] },


  { "include": [ "<glm/ext/vector_bool2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_double2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_float2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },

  { "include": [ "<glm/ext/vector_int2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_int2_sized.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint2_sized.hpp>", "private", "<glm/vec2.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_vec2.hpp>", "private", "<glm/vec2.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_vec2.inl>", "private", "<glm/vec2.hpp>", "public" ] },


  { "include": [ "<glm/ext/vector_bool3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_double3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_float3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },

  { "include": [ "<glm/ext/vector_int3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_int3_sized.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint3_sized.hpp>", "private", "<glm/vec3.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_vec3.hpp>", "private", "<glm/vec3.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_vec3.inl>", "private", "<glm/vec3.hpp>", "public" ] },


  { "include": [ "<glm/ext/vector_bool4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_double4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_float4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },

  { "include": [ "<glm/ext/vector_int4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_int4_sized.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/ext/vector_uint4_sized.hpp>", "private", "<glm/vec4.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_vec4.hpp>", "private", "<glm/vec4.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_vec4.inl>", "private", "<glm/vec4.hpp>", "public" ] },


  { "include": [ "<glm/ext/matrix_double4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_float4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },

  { "include": [ "<glm/ext/matrix_int4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_int4x4_sized.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_uint4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_uint4x4_sized.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_mat4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_mat4x4.inl>", "private", "<glm/mat4x4.hpp>", "public" ] },


  { "include": [ "<glm/ext/matrix_double4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_float4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },

  { "include": [ "<glm/ext/matrix_int4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_int4x4_sized.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_uint4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_uint4x4_sized.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },

  { "include": [ "<glm/detail/type_mat4x4.hpp>", "private", "<glm/mat4x4.hpp>", "public" ] },
  { "include": [ "<glm/detail/type_mat4x4.inl>", "private", "<glm/mat4x4.hpp>", "public" ] },


  { "include": [ "<glm/gtc/random.inl>", "private", "<glm/gtc/random.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_clip_space.inl>", "private", "<glm/ext/matrix_clip_space.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_projection.inl>", "private", "<glm/ext/matrix_projection.hpp>", "public" ] },
  { "include": [ "<glm/ext/matrix_transform.inl>", "private", "<glm/ext/matrix_transform.hpp>", "public" ] },


  { "include": [ "<glm/ext/quaternion_float.hpp>", "private", "<glm/gtc/quaternion.hpp>", "public" ] },

  { "include": [ "<glm/gtx/euler_angles.inl>", "private", "<glm/gtx/euler_angles.hpp>", "public" ] },
  { "include": [ "<glm/gtx/norm.inl>", "private", "<glm/gtx/norm.hpp>", "public" ] },
  { "include": [ "<glm/gtx/transform.inl>", "private", "<glm/gtx/transform.hpp>", "public" ] },


  { "include": [ "<glm/detail/func_common.inl>", "private", "<glm/common.hpp>", "public" ] },
  { "include": [ "<glm/detail/func_exponential.inl>", "private", "<glm/exponential.hpp>", "public" ] },
  { "include": [ "<glm/detail/func_geometric.inl>", "private", "<glm/geometric.hpp>", "public" ] },
  { "include": [ "<glm/detail/func_matrix.inl>", "private", "<glm/matrix.hpp>", "public" ] },
  { "include": [ "<glm/detail/func_trigonometric.inl>", "private", "<glm/trigonometric.hpp>", "public" ] },


  { "include": [ "<vk_mem_alloc.h>", "private", "\"vulkanusage.hpp\"", "public" ] },
  { "include": [ "<volk.h>", "private", "\"vulkanusage.hpp\"", "public" ] },
  { "include": [ "<vulkan/vulkan.h>", "private", "<volk.h>", "private" ] },
  { "include": [ "<vulkan/vulkan_core.h>", "private", "<vulkan/vulkan.h>", "private" ] },

  { "include": [ "<xstring>", "private", "<string>", "public" ] },

  { "symbol": [ "assert", "private", "<cassert>", "public" ] },
  { "symbol": [ "std::string", "private", "<string>", "public" ] },
  { "symbol": [ "std::move", "private", "<utility>", "public" ] },

  { "symbol": [ "size_t", "private", "\"core/integer.hpp\"", "public" ] },
  { "symbol": [ "uint8_t", "private", "\"core/integer.hpp\"", "public" ] },
  { "symbol": [ "uint16_t", "private", "\"core/integer.hpp\"", "public" ] },
  { "symbol": [ "uint32_t", "private", "\"core/integer.hpp\"", "public" ] },
  { "symbol": [ "uint64_t", "private", "\"core/integer.hpp\"", "public" ] },
  { "symbol": [ "int32_t", "private", "\"core/integer.hpp\"", "public" ] }
]